// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using DataAccess.Data;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(OLXDbContext))]
    [Migration("20240126143143_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OLX.Data.Entities.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(9);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("https://th.bing.com/th/id/OIP.gV1cXI_SNBK_nU1yrE_hcwHaGp?w=196&h=180&c=7&r=0&o=5&pid=1.7");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.ToTable("Announcements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CityId = 15,
                            ContactInformation = "3124324235",
                            Description = "iPhone X for sale in good condition",
                            ImageUrl = "https://th.bing.com/th/id/OIP.3auup9shWZkERJu29Y4uIQHaFj?w=239&h=180&c=7&r=0&o=5&pid=1.7",
                            Price = 750m,
                            SellerName = "Mark",
                            Title = "iPhone X"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CityId = 7,
                            ContactInformation = "3124324235",
                            Price = 45.5m,
                            SellerName = "Katya",
                            Title = "PowerBall"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CityId = 11,
                            ContactInformation = "3124324235",
                            Price = 189m,
                            SellerName = "Oleg",
                            Title = "Nike T-Shirt"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CityId = 12,
                            ContactInformation = "3124324235",
                            Description = "New samsung s23 phone for sale",
                            ImageUrl = "https://th.bing.com/th/id/OIP.qPr57iPly0B_1IhUEyYE6QHaHa?w=162&h=180&c=7&r=0&o=5&pid=1.7",
                            Price = 600m,
                            SellerName = "Boris",
                            Title = "Samsung S23"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CityId = 15,
                            ContactInformation = "3124324235",
                            Price = 50m,
                            SellerName = "Max",
                            Title = "Air Ball"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CityId = 16,
                            ContactInformation = "3124324235",
                            Description = "Used macbook pro 2019 for sale",
                            Price = 1200m,
                            SellerName = "Anya",
                            Title = "MacBook Pro 2019"
                        });
                });

            modelBuilder.Entity("OLX.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fashion"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Home & Garden"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Transport"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Toys & Hobbies"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Musical Instruments"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Art"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("OLX.Data.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Donetsk"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Zaporizhzhia"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ivano-Frankivsk"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Kropyvnytskyi"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Luhansk"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Mykolaiv"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Poltava"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Sumy"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Ternopil"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Uzhgorod"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Kherson"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Khmelnytskyi"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Cherkasy"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Chernihiv"
                        });
                });

            modelBuilder.Entity("OLX.Data.Entities.Announcement", b =>
                {
                    b.HasOne("OLX.Data.Entities.Category", "Category")
                        .WithMany("Announcements")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OLX.Data.Entities.City", "City")
                        .WithMany("Announcements")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("City");
                });

            modelBuilder.Entity("OLX.Data.Entities.Category", b =>
                {
                    b.Navigation("Announcements");
                });

            modelBuilder.Entity("OLX.Data.Entities.City", b =>
                {
                    b.Navigation("Announcements");
                });
#pragma warning restore 612, 618
        }
    }
}
